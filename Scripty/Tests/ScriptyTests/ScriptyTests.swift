import XCTest
import Files
import ScriptyLib

final class ScriptyTests: XCTestCase {
    
    private lazy var parentFolder: Folder = {
        let currentFile = try! File(path: #file)
        return currentFile.parent!
    }()
    
    private lazy var assetCatalog: Folder = {
        return try! self.parentFolder.subfolder(named: "Media.xcassets")
    }()
    
    private lazy var imageAssetFile: File = {
        return try! self.parentFolder.file(named: "ImageAsset.swift")
    }()
    
    override func tearDown() {
        try? self.imageAssetFile.resetToGitHEAD()
        super.tearDown()
    }
    
    func testGeneratingCodeFromAssetCatalog() throws {
        let outputFile = try parentFolder.file(named: "ImageAsset.swift")
        let outputContentsPreGeneration = try outputFile.readAsString()
        XCTAssertEqual(outputContentsPreGeneration, """
let state = "Code has not yet been generated"

""")
        
        try ImageGenerator.generate(catalogFolder: self.assetCatalog, outputFolder: parentFolder)
        
        let outputContents = try outputFile.readAsString()
        
        let expectedOutput = """
/* This file is automatically generated. Don't try to edit it by hand! */
import UIKit

/// Helper class for finding the proper bundle
private class ImageBundleHelper {}

/// Images contained within the asset catalog
public enum ImageAsset: String, CaseIterable {
    case first_image
    case second_image
}

public extension UIImage {
    convenience init(from imageAsset: ImageAsset) {
        self.init(named: imageAsset.rawValue,
                  in: Bundle(for: ImageBundleHelper.self),
                  compatibleWith: nil)!
    }

    static let prr_first_image = UIImage(from: .first_image)

    static let prr_second_image = UIImage(from: .second_image)
}

"""
        
        XCTAssertEqual(outputContents, expectedOutput)
    }

    

    static var allTests = [
        ("testGeneratingCodeFromAssetCatalog", testGeneratingCodeFromAssetCatalog),
    ]
}
